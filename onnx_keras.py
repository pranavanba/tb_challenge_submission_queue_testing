# -*- coding: utf-8 -*-
"""ONNX_Keras.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/pranavanba/tb_challenge_demo/blob/main/train/ONNX_Keras.ipynb

### 1. Import Libraries
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import OneHotEncoder
from sklearn.model_selection import train_test_split

import keras
from keras.models import Sequential
from keras.layers import Dense

# !pip install tf2onnx
import tf2onnx
import tensorflow as tf
# !pip install onnxruntime
import onnxruntime as rt

"""### 2. Load dataset

This is just a dummy example, loading a very simple and basic data.
"""

#Replace it based on cough recording training dataset
data_df = pd.read_csv('dummy_input.csv')

X = data_df.iloc[:,:2].values 
y = data_df.iloc[:,2].values

# y = np.reshape(y,(-1,1))
X

"""### 3. Preprocessing"""

def get_ohe(signal):
    ohe = OneHotEncoder()
    ohe_array = ohe.fit_transform(signal).toarray()
    return ohe_array

X = get_ohe(X)

"""### 4. Train/Validation split"""

train_X, val_X, train_y, val_y = train_test_split(X, y, test_size = 0.15)

"""### 5. Build Model"""

def build_model():
    inputs = keras.layers.Input(shape=(5))
    
    x = keras.layers.Dense(32, activation="relu", name="dense_1")(inputs)
    x = keras.layers.Dense(16, activation="relu", name="dense_2")(x)
    output = keras.layers.Dense(1, activation="softmax", name="output")(x)
    
    model = keras.Model(inputs=inputs, outputs=output, name="tb_recognition")
    return model

model = build_model()

"""#### 5.1 Compile"""

model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

"""#### 5.2 Checkpoints"""

model_checkpoint = keras.callbacks.ModelCheckpoint("tb_cough_detection.h5", 
                                                      monitor="val_accuracy", 
                                                      save_best_only=True)
callbacks = [model_checkpoint]

"""#### 5.2 Fit model"""

history = model.fit(train_X, train_y, 
                    validation_data = (val_X, val_y), 
                    epochs=5, batch_size=64, 
                    callbacks = callbacks)

"""### 6. Convert Keras to ONNX

Converting Keras trained model into ONNX format model
"""

def keras_2_onnx():
    out_path = model.name + ".onnx"
    spec = (tf.TensorSpec((None, 5), tf.float32, name="input"),)
    m_proto, _ = tf2onnx.convert.from_keras(model, input_signature=spec, output_path=out_path)
    
    out_name = [n.name for n in m_proto.graph.output]
    return out_name

out_name = keras_2_onnx()

"""### 7. Prediction on ONNX model

Demo example to make prediction using ONNX format model
"""

def get_prediction(val_X):
    model_inference = rt.InferenceSession('tb_recognition.onnx')
    
    input_name = model_inference.get_inputs()[0].name
    label_name = model_inference.get_outputs()[0].name
    
    onnx_pred = model_inference.run([label_name], {input_name: val_X.astype(np.float32)})
    pred = np.argmax(onnx_pred[0], axis=1)
    return pred

pred = get_prediction(val_X)